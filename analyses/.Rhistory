niter = 1000
rho <- numeric(niter)
sigma2 <- numeric(niter)
likelihood <- numeric(niter)
Xsample <- matrix(NA, nrow = niter, ncol = 101)
# initialization
rho[1] <- runif(1, -1, 1)
sigma2[1] <- rinvgamma(1, 1, 1)
# sample X from PF with initialized rho & sigma2
sir <- SIR(101, 500, rho[1], sigma2[1])
# pick one of the final resampled paths
index <- sample(1:500, 1)
Xsample[1,] <- sir$x[index,]
# compute likelihood
means <- numeric(101)
for (j in 1:101) {
means[j] <- mean(sir$w[j,])
}
likelihood[1] <- prod(means)
ar <- 0
for (k in 2:niter) {
# sample a new theta
rho_new <- rtruncnorm(1, a = -1, b = 1, mean = rho[k-1], sd = sigma[1])
sigma2_new <- runif(1, 0, sigma2[k-1] + sigma[2])
#sample new X & likelihood
sir_new <- SIR(101, 500, rho_new, sigma2_new)
index <- sample(1:500, 1)
Xsample_new <- sir_new$x[index,]
means <- numeric(101)
for (j in 1:101) {
means[j] <- mean(sir_new$w[j,])
}
likelihood_new <- prod(means)
# acceptance ratio
num <- log(dunif(1, 0, sigma2_new + sigma[2])) +
log(dtruncnorm(rho[k-1], a = -1, b = 1, mean = rho_new, sd = sigma[1])) +
dunif(rho_new, -1, 1, log = TRUE) +
dinvgamma(sigma2_new, 1, 1, log = TRUE) +
log(likelihood_new)
den <- log(dunif(1, 0, sigma2[k-1] + sigma[2])) +
log(dtruncnorm(rho_new, a = -1, b = 1, mean = rho_new[k-1], sd = sigma[1])) +
dunif(rho[k-1], -1, 1, log = TRUE) +
dinvgamma(sigma2[k-1], 1, 1, log = TRUE) +
log(likelihood[k-1])
ac <- exp(num - den)
if (runif(1)<=ac){
rho[k] <- rho_new
sigma2[k] <- sigma2_new
likelihood[k] <- likelihood_new
Xsample[k,] <- Xsample_new
ar <- ar+1
} else {
rho[k] <- rho[k-1]
sigma2[k] <- sigma2[k-1]
likelihood[k] <- likelihood[k-1]
Xsample[k,] <- Xsample[k-1,]
}
}
plot(rho, ty = "l")
plot(sigma2, ty = "l")
mean(sigma2)
mean(rho)
sigma = c(0.1, 0.7)
rho <- numeric(niter)
sigma2 <- numeric(niter)
likelihood <- numeric(niter)
Xsample <- matrix(NA, nrow = niter, ncol = 101)
# initialization
rho[1] <- runif(1, -1, 1)
sigma2[1] <- rinvgamma(1, 1, 1)
# sample X from PF with initialized rho & sigma2
sir <- SIR(101, 500, rho[1], sigma2[1])
# pick one of the final resampled paths
index <- sample(1:500, 1)
Xsample[1,] <- sir$x[index,]
# compute likelihood
means <- numeric(101)
for (j in 1:101) {
means[j] <- mean(sir$w[j,])
}
likelihood[1] <- prod(means)
ar <- 0
for (k in 2:niter) {
# sample a new theta
rho_new <- rtruncnorm(1, a = -1, b = 1, mean = rho[k-1], sd = sigma[1])
sigma2_new <- runif(1, 0, sigma2[k-1] + sigma[2])
#sample new X & likelihood
sir_new <- SIR(101, 500, rho_new, sigma2_new)
index <- sample(1:500, 1)
Xsample_new <- sir_new$x[index,]
means <- numeric(101)
for (j in 1:101) {
means[j] <- mean(sir_new$w[j,])
}
likelihood_new <- prod(means)
# acceptance ratio
num <- log(dunif(1, 0, sigma2_new + sigma[2])) +
log(dtruncnorm(rho[k-1], a = -1, b = 1, mean = rho_new, sd = sigma[1])) +
dunif(rho_new, -1, 1, log = TRUE) +
dinvgamma(sigma2_new, 1, 1, log = TRUE) +
log(likelihood_new)
den <- log(dunif(1, 0, sigma2[k-1] + sigma[2])) +
log(dtruncnorm(rho_new, a = -1, b = 1, mean = rho_new[k-1], sd = sigma[1])) +
dunif(rho[k-1], -1, 1, log = TRUE) +
dinvgamma(sigma2[k-1], 1, 1, log = TRUE) +
log(likelihood[k-1])
ac <- exp(num - den)
if (runif(1)<=ac){
rho[k] <- rho_new
sigma2[k] <- sigma2_new
likelihood[k] <- likelihood_new
Xsample[k,] <- Xsample_new
ar <- ar+1
} else {
rho[k] <- rho[k-1]
sigma2[k] <- sigma2[k-1]
likelihood[k] <- likelihood[k-1]
Xsample[k,] <- Xsample[k-1,]
}
}
plot(rho, ty = "l")
mean(rho)
plot(sigma2, ty = "l")
mean(sigma2)
sigma = (0.1, 0.5)
sigma = c(0.1, 0.5)
niter = 2500
rho <- numeric(niter)
sigma2 <- numeric(niter)
likelihood <- numeric(niter)
Xsample <- matrix(NA, nrow = niter, ncol = 101)
# initialization
rho[1] <- runif(1, -1, 1)
sigma2[1] <- rinvgamma(1, 1, 1)
# sample X from PF with initialized rho & sigma2
sir <- SIR(101, 500, rho[1], sigma2[1])
# pick one of the final resampled paths
index <- sample(1:500, 1)
Xsample[1,] <- sir$x[index,]
# compute likelihood
means <- numeric(101)
for (j in 1:101) {
means[j] <- mean(sir$w[j,])
}
likelihood[1] <- prod(means)
ar <- 0
for (k in 2:niter) {
# sample a new theta
rho_new <- rtruncnorm(1, a = -1, b = 1, mean = rho[k-1], sd = sigma[1])
sigma2_new <- runif(1, 0, sigma2[k-1] + sigma[2])
#sample new X & likelihood
sir_new <- SIR(101, 500, rho_new, sigma2_new)
index <- sample(1:500, 1)
Xsample_new <- sir_new$x[index,]
means <- numeric(101)
for (j in 1:101) {
means[j] <- mean(sir_new$w[j,])
}
likelihood_new <- prod(means)
# acceptance ratio
num <- log(dunif(1, 0, sigma2_new + sigma[2])) +
log(dtruncnorm(rho[k-1], a = -1, b = 1, mean = rho_new, sd = sigma[1])) +
dunif(rho_new, -1, 1, log = TRUE) +
dinvgamma(sigma2_new, 1, 1, log = TRUE) +
log(likelihood_new)
den <- log(dunif(1, 0, sigma2[k-1] + sigma[2])) +
log(dtruncnorm(rho_new, a = -1, b = 1, mean = rho_new[k-1], sd = sigma[1])) +
dunif(rho[k-1], -1, 1, log = TRUE) +
dinvgamma(sigma2[k-1], 1, 1, log = TRUE) +
log(likelihood[k-1])
ac <- exp(num - den)
if (runif(1)<=ac){
rho[k] <- rho_new
sigma2[k] <- sigma2_new
likelihood[k] <- likelihood_new
Xsample[k,] <- Xsample_new
ar <- ar+1
} else {
rho[k] <- rho[k-1]
sigma2[k] <- sigma2[k-1]
likelihood[k] <- likelihood[k-1]
Xsample[k,] <- Xsample[k-1,]
}
}
plot(rho, ty = "l")
mean(rho)
plot(sigma2, ty = "l")
mean(sigma2)
acf(sigma2)
acf(sigma2, lag.max = 60)
acf(rho)
acf(rho, lag.max = 60)
hist(rho)
hist(sigma2)
hist(sigma2,breaks = 60)
hist(sigma2, breaks = 30)
hist(rho, breaks = 30)
Xpost <- apply(Xsample, 2, mean)
plot(Xpost)
lines(Xstar)
plot(Xpost, ty = "l", col = "blue")
lines(Xstar)
upper_q <- apply(Xsample, 2, function(x) quantile(x, 0.975))
upper_q
lower_q <- apply(Xsample, 2, function(x) quantile(x, 0.025))
lines(upper_q, col = "red")
lines(lower_q, col = "red")
polygon(upper_q, lower_q, col = "red")
plot(Xpost, ty = "l", col = "blue")
lines(Xstar)
lines(upper_q, col = "red")
lines(lower_q, col = "red")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF", lty = 0)
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF", lty = 0)
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF", lty = 0)
plot(Xpost, ty = "l", col = "blue")
lines(upper_q, col = "red")
lines(lower_q, col = "red")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF", lty = 0)
plot(Xpost, ty = "l", col = "blue")
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF", alpha = 0.3, lty = 0)
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
plot(Xpost, ty = "l", col = "blue")
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF", alpha = 0.1, lty = 0)
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
plot(Xpost, ty = "l", col = "blue")
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF", density = 10, lty = 0)
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
plot(Xpost, ty = "l", col = "blue")
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = rgb(0, 0, 1, alpha = 0.3), lty = 0)
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
plot(Xpost, ty = "l", col = "blue")
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
plot(Xpost, ty = "l", col = "blue")
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2)
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "purple")
lines(Xstar, lty = "dotted", col = "purple", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 5))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "purple", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 6))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "purple", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 7))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "purple", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 7))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "#800080", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 7))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "orange", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 7))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "magenta", lwd = 2)
library(latex2exp)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 7), xlab = "T",
ylab = TeX(r'(p($x_{0$:$T}|y_{0$:$T}$, \beta, \alpha))'))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "magenta", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 7), xlab = "T",
ylab = TeX(r'(p($x_{0$:$T}|y_{0$:$T}$, \beta, \alpha))'))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "maroon1", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 7), xlab = "T",
ylab = TeX(r'(p($x_{0$:$T}|y_{0$:$T}$, \beta, \alpha))'))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "violetred1", lwd = 2)
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 7), xlab = "T",
ylab = TeX(r'(p($x_{0$:$T}|y_{0$:$T}$, \beta, \alpha))'))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "magenta", lwd = 2)
plot(rho, ty = "l", col = "purple", ylab = TeX(r'(\rho)'))
plot(rho, ty = "l", col = "purple", ylab = TeX(r'(\rho)'))
lines(mean(rho), col = "blue", lwd = 2)
mean(rho)
plot(rho, ty = "l", ylab = TeX(r'(\rho)'))
lines(mean(rho), col = "purple", lwd = 2)
lines(rep(mean(rho), times = 2500), col = "purple", lwd = 2)
lines(rep(mean(rho), times = 2500), col = "turquoise", lwd = 2)
plot(sigma2, ty = "l", ylab = TeX(r'(\sigma^2)'))
acf(rho, lag.max = 60)
acf(rho, lag.max = 80)
acf(sigma2,lag.max = 80)
acf(sigma2,lag.max = 100)
acf(rho, lag.max = 100)
acf(rho, lag.max = 80)
acf(sigma2,lag.max = 80)
acf(rho, lag.max = 80, main = "")
acf(sigma2,lag.max = 80, main = "")
acf(rho, lag.max = 80, main = TeX(r'(ACF plot for \rho)'))
acf(sigma2,lag.max = 80, main = TeX(r'(ACF plot for \rho)'))
acf(sigma2,lag.max = 80, main = TeX(r'(ACF plot for \sigma^2)'))
plot(sigma2, ty = "l", ylab = TeX(r'(\sigma^2)'))
plot(sigma2, ty = "l", ylab = TeX(r'({\sigma}^2)'))
plot(sigma2, ty = "l", ylab = TeX(r'({\sigma}*2)'))
plot(sigma2, ty = "l", ylab = TeX(r'(\\sigma*2)'))
plot(sigma2, ty = "l", ylab = TeX("$\\sigma^2$"))
acf(sigma2,lag.max = 80, main = TeX("ACF plot for $\\sigma^2$"))
hist(rho)
hist(rho, breaks = 30, main = TeX(r'(Histogram for \rho)'), xlab = main = TeX(r'(\rho)'), prob = TRUE)
hist(rho, breaks = 30, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(sigma2, breaks = 30, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
hist(sigma2, breaks = 20, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
hist(sigma2, breaks = 20, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
hist(sigma2, breaks = 10, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
hist(sigma2, breaks = 15, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
hist(rho, breaks = 15, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
sigma = c(0.1, 1)
rho <- numeric(niter)
sigma2 <- numeric(niter)
likelihood <- numeric(niter)
Xsample <- matrix(NA, nrow = niter, ncol = 101)
# initialization
rho[1] <- runif(1, -1, 1)
sigma2[1] <- rinvgamma(1, 1, 1)
# sample X from PF with initialized rho & sigma2
sir <- SIR(101, 500, rho[1], sigma2[1])
# pick one of the final resampled paths
index <- sample(1:500, 1)
Xsample[1,] <- sir$x[index,]
# compute likelihood
means <- numeric(101)
for (j in 1:101) {
means[j] <- mean(sir$w[j,])
}
likelihood[1] <- prod(means)
ar <- 0
for (k in 2:niter) {
# sample a new theta
rho_new <- rtruncnorm(1, a = -1, b = 1, mean = rho[k-1], sd = sigma[1])
sigma2_new <- runif(1, 0, sigma2[k-1] + sigma[2])
#sample new X & likelihood
sir_new <- SIR(101, 500, rho_new, sigma2_new)
index <- sample(1:500, 1)
Xsample_new <- sir_new$x[index,]
means <- numeric(101)
for (j in 1:101) {
means[j] <- mean(sir_new$w[j,])
}
likelihood_new <- prod(means)
# acceptance ratio
num <- log(dunif(1, 0, sigma2_new + sigma[2])) +
log(dtruncnorm(rho[k-1], a = -1, b = 1, mean = rho_new, sd = sigma[1])) +
dunif(rho_new, -1, 1, log = TRUE) +
dinvgamma(sigma2_new, 1, 1, log = TRUE) +
log(likelihood_new)
den <- log(dunif(1, 0, sigma2[k-1] + sigma[2])) +
log(dtruncnorm(rho_new, a = -1, b = 1, mean = rho_new[k-1], sd = sigma[1])) +
dunif(rho[k-1], -1, 1, log = TRUE) +
dinvgamma(sigma2[k-1], 1, 1, log = TRUE) +
log(likelihood[k-1])
ac <- exp(num - den)
if (runif(1)<=ac){
rho[k] <- rho_new
sigma2[k] <- sigma2_new
likelihood[k] <- likelihood_new
Xsample[k,] <- Xsample_new
ar <- ar+1
} else {
rho[k] <- rho[k-1]
sigma2[k] <- sigma2[k-1]
likelihood[k] <- likelihood[k-1]
Xsample[k,] <- Xsample[k-1,]
}
}
mean(rho)
mean(sigma2)
hist(rho, breaks = 15, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(sigma2, breaks = 15, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
plot(rho, ty = "l", ylab = TeX(r'(\rho)'))
plot(sigma2, ty = "l", ylab = TeX("$\\sigma^2$"))
acf(rho, lag.max = 80, main = TeX(r'(ACF plot for \rho)'))
acf(sigma2,lag.max = 80, main = TeX("ACF plot for $\\sigma^2$"))
acf(rho, lag.max = 80, main = TeX(r'(ACF plot for \rho)'))
acf(sigma2,lag.max = 80, main = TeX("ACF plot for $\\sigma^2$"))
Xpost <- apply(Xsample, 2, mean)
upper_q <- apply(Xsample, 2, function(x) quantile(x, 0.975))
lower_q <- apply(Xsample, 2, function(x) quantile(x, 0.025))
plot(Xpost, ty = "l", col = "blue", lwd = 2, ylim = c(-6, 7), xlab = "T",
ylab = TeX(r'(p($x_{0$:$T}|y_{0$:$T}$, \beta, \alpha))'))
lines(upper_q, col = "#6BD7AF")
lines(lower_q, col = "#6BD7AF")
polygon(c(1:101, rev(1:101)), c(lower_q, rev(upper_q)),
col = "#6BD7AF80" , lty = 0)
lines(upper_q, col = "#6BD7AF", lwd = 2)
lines(lower_q, col = "#6BD7AF", lwd = 2)
lines(Xstar, lty = "dotted", col = "magenta", lwd = 2)
pdf('hist2.3_1.jpg')
hist(rho, breaks = 15, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
dev.off()
par(mfrow = c(2,1))
hist(rho, breaks = 15, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(sigma2, breaks = 15, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
par(mfrow = c(1,2))
hist(rho, breaks = 15, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(sigma2, breaks = 15, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
pdf('hist2.3_1.jpg')
par(mfrow = c(1,2))
hist(rho, breaks = 30, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(sigma2, breaks = 15, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
pdf('hist2.3_1.jpg')
par(mfrow = c(1,2))
hist(rho, breaks = 60, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(sigma2, breaks = 15, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
hist(rho, breaks = 60, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(rho, breaks = 60, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(rho, breaks = 60, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hi
plot(rho, ty = "l", ylab = TeX(r'(\rho)'))
par(mfrow = c(1,2))
hist(rho, breaks = 60, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(sigma2, breaks = 15, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
plot(!)
plot(1)
2*1¨12
2*1:12
hist(rho, breaks = 60, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
pdf('hist2.3_1.jpg')
par(mfrow = c(1,2))
hist(rho, breaks = 60, main = TeX(r'(Histogram for \rho)'), xlab = TeX(r'(\rho)'), prob = TRUE)
hist(sigma2, breaks = 15, main = TeX("Histogram of $\\sigma^2$"), xlab = TeX("$\\sigma^2$"), prob = TRUE)
dev.off()
plot(3)
